<application>
    <name>MotivatedAutonomousAgent</name>
    
    <!-- ==================== MODULES ==================== -->
    <module>
        <name>sleeping</name><!--This mode is used only to present the robot before starting the experiment-->
        <parameters>--name /action --robotPlatform berry</parameters> <!--Add the parameter --name to avoid create repeated connections (uses the same as the action module)-->
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpscope</name>
        <parameters>--xml "/usr/local/src/robot/cognitiveInteraction/motivatedAutonomousAgent/app/motivatedAutonomousAgent/scripts/Yarpscope_Drives.xml"</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpscope</name>
        <parameters>--xml "/usr/local/src/robot/cognitiveInteraction/motivatedAutonomousAgent/app/motivatedAutonomousAgent/scripts/Yarpscope_Needs.xml"</parameters>
        <node>icubsrv</node>
    </module>

    <!--YarpDataDumper-->
     <module>
        <name>yarpdev</name>
        <parameters>--device usbCamera --name /grabberUsbCamera --period 60 --d /dev/video3</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpdatadumper</name>
        <parameters> --name /UsbCamera --dir /Leticia/S0X/Social/yarpdatadumper/externalCamera --type image --txTime</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpdatadumper</name>
        <parameters>--name /Head --dir /Leticia/S0X/Social/yarpdatadumper/Joints/Head</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpdatadumper</name>
        <parameters>--name /Torso --dir /Leticia/S0X/Social/yarpdatadumper/Joints/Torso</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpdatadumper</name>
        <parameters>--name /LeftArm --dir /Leticia/S0X/Social/yarpdatadumper/Joints/LeftArm</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpdatadumper</name>
        <parameters>--name /RightArm --dir /Leticia/S0X/Social/yarpdatadumper/Joints/RightArm</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpdatadumper</name>
        <parameters>--name /AffectEval --dir /Leticia/S0X/Social/yarpdatadumper/Sensors/AffectEval</parameters>
        <node>larocs</node>
    </module>

    <module>
        <name>yarpdatadumper</name>
        <parameters>--name /SkinTouch --dir /Leticia/S0X/Social/yarpdatadumper/Sensors/SkinTouch</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpdatadumper</name>
        <parameters>--name /LeftCam --dir /Leticia/S0X/Social/yarpdatadumper/Sensors/Images/LeftCam --type image</parameters>
        <node>icubsrv</node>
    </module>

    <!--YarpView-->
    <module>
        <name>yarpview</name>
        <parameters>--name /checkSubject</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>yarpview</name>
        <parameters>--name /segmentedViewerL</parameters>
        <node>icubsrv</node>
    </module>

 <!--   <module>
        <name>yarpview</name>
        <parameters>--name /segmentedViewerR</parameters>
        <node>icubsrv</node>
    </module>
-->

    <!-- Perception -->
    <module>
        <name>icubeYARP</name>
        <parameters>--name icube_0 --port /dev/ttyUSB0 --start</parameters>
        <node>terminal</node>
    </module>

    <module>
        <name>icubeYARP</name>
        <parameters>--name icube_1 --port /dev/ttyUSB1 --start</parameters>
        <node>terminal</node>
    </module>

    <module>
        <name>iCubeProcessor</name>
        <parameters>--numberICubes 2</parameters>
        <node>terminal</node>
    </module>

    <module>
        <name>yarpOpenFace</name>
        <parameters></parameters>
        <node>larocs</node>
    </module>

    <module>
        <name>skinProcessorHelper</name>
        <parameters>--useLeftArm 1 --useRightArm 1</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>batterySensor</name>
        <parameters></parameters>
        <node>icubsrv</node>
    </module>
   
    <module>
        <name>ColorSegmentation</name>
        <parameters>--name colorSegmentationL --threadName colorSegmentationL</parameters>
        <node>icubsrv</node>
    </module>
<!--
    <module>
        <name>ColorSegmentation</name>
        <parameters>--name colorSegmentationR --threadName colorSegmentationR</parameters>
        <node>icubsrv</node>
    </module>
-->
    <module>
        <name>perception</name>
        <parameters></parameters>
        <node>icubsrv</node>
    </module>

    <!-- Motivation -->
    <module>
        <name>motivation</name>
        <parameters>--robotProfile social</parameters>
        <node>icubsrv</node>
    </module>

    <!-- State Machine -->
    <module>
        <name>decisionMaking</name>
        <parameters>--robotProfile social</parameters>
        <node>icubsrv</node>
    </module>

    <!-- Action -->
    <!-- Actions Rendering Engine -->
    <module>
        <name>actionsRenderingEngine</name>
        <parameters></parameters>
        <node>icubsrv</node>
    </module>

    <!-- Move Body -->
    <module>
        <name>ctpService</name>
        <parameters>--robot icub --part torso</parameters>
        <node>icubsrv</node>                
    </module>

    <module>
        <name>ctpService</name>
        <parameters>--robot icub --part right_arm</parameters>
        <node>icubsrv</node>                
    </module>

    <module>
        <name>ctpService</name>
        <parameters>--robot icub --part left_arm</parameters>
        <node>icubsrv</node>                
    </module>

    <module>
        <name>ctpService</name>
        <parameters>--robot icub --part face</parameters>
        <node>icubsrv</node>
    </module>

    <module>
        <name>action</name>
        <parameters>--robotPlatform berry</parameters>
        <node>icubsrv</node>
    </module>


    <!-- ==================== CONNECTIONS ==================== -->
    <connection>
        <from>/grabberUsbCamera</from>
        <to>/UsbCamera</to>
        <protocol>udp</protocol>
    </connection>

    <connection>
        <from>/icub/head/state:o</from>
        <to>/Head</to>
        <protocol>udp</protocol>
    </connection>

    <connection>
        <from>/icub/torso/state:o</from>
        <to>/Torso</to>
        <protocol>udp</protocol>
    </connection>

        <connection>
        <from>/icub/left_arm/state:o</from>
        <to>/LeftArm</to>
        <protocol>udp</protocol>
    </connection>

    <connection>
        <from>/icub/right_arm/state:o</from>
        <to>/RightArm</to>
        <protocol>udp</protocol>
    </connection>

    <connection>
        <from>/yarpOpenFace/affectResText:o</from>
        <to>/AffectEval</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/skinProcessorHelper/skinTouch/data:o</from>
        <to>/SkinTouch</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/icub/camcalib/left/out</from>
        <to>/LeftCam</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/grabberUsbCamera</from>
        <to>/checkSubject</to>
        <protocol>udp</protocol>
    </connection> 

    <connection>
        <from>/icube_0/data:o</from>
        <to>/iCubeProcessor/iCubeData_0:i</to>
        <protocol>udp</protocol>
    </connection>

    <connection>
        <from>/icube_0/events:o</from>
        <to>/iCubeProcessor/iCubeEvents_0:i</to>
        <protocol>udp</protocol>
    </connection>

    <connection>
        <from>/icube_1/data:o</from>
        <to>/iCubeProcessor/iCubeData_1:i</to>
        <protocol>udp</protocol>
    </connection>

    <connection>
        <from>/icube_1/events:o</from>
        <to>/iCubeProcessor/iCubeEvents_1:i</to>
        <protocol>udp</protocol>
    </connection>

    <connection>
        <from>/iCubeProcessor/iCubeData:o</from>
        <to>/perception/iCubeData:i</to>
        <protocol>udp</protocol>
    </connection>

    <connection>
        <from>/icub/camcalib/left/out</from>
        <to>/yarpOpenFace/inputImg:i</to>
        <protocol>tcp</protocol>
    </connection>

    <connection>
        <from>/yarpOpenFace/affectResText:o</from>
        <to>/perception/affectEval:i</to>
        <protocol>tcp</protocol>
    </connection>

    <connection>
        <from>/skinManager/skin_events:o</from>
        <to>/skinProcessorHelper/skinTouch:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/skinProcessorHelper/skinTouch/data:o</from>
        <to>/perception/skinTouch:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/icub/camcalib/left/out</from>
        <to>/colorSegmentationL/img:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/colorSegmentationL/img:o</from>
        <to>/segmentedViewerL</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/colorSegmentationL/out</from>
        <to>/perception/blobsListL:i</to>
        <protocol>shmem</protocol>
    </connection>
<!--
    <connection>
        <from>/icub/camcalib/right/out</from>
        <to>/colorSegmentationR/img:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/colorSegmentationR/out</from>
        <to>/perception/blobsListR:i</to>
        <protocol>shmem</protocol>
    </connection>
-->
    <connection>
        <from>/batterySensor/batteryLevel:o</from>
        <to>/perception/batteryLevel:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/batterySensor/noBattery:o</from>
        <to>/decisionMaking/noBattery:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/perception/batteryLevel:o</from>
        <to>/motivation/batteryLevel:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/perception/iCubes:o</from>
        <to>/motivation/iCubes:i</to>
        <protocol>shmem</protocol>
    </connection>
    
    <connection>
        <from>/perception/allObjectsSeen:o</from>
        <to>/motivation/allObjectsSeen:i</to>
        <protocol>shmem</protocol>
    </connection>
    
    <connection>
        <from>/perception/gazeFaceSkin:o</from>
        <to>/motivation/gazeFaceSkin:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/perception/gazeFaceSkin:o</from>
        <to>/decisionMaking/gazeFaceSkin:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/perception/allObjectsSeen:o</from>
        <to>/decisionMaking/allObjsSeen:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/perception/dataSkin:o</from>
        <to>/decisionMaking/dataSkin:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/perception/dataAffect:o</from>
        <to>/decisionMaking/dataAffect:i</to>
        <protocol>shmem</protocol>
    </connection>
    
    <connection>
        <from>/motivation/exploreDriveObject:o</from>
        <to>/decisionMaking/exploreDriveObject:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/motivation/survivalDrive:o</from>
        <to>/decisionMaking/survivalDrive:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/motivation/affectDrive:o</from>
        <to>/decisionMaking/affectDrive:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/decisionMaking/startDrivesComputation:o</from>
        <to>/motivation/startDrivesComputation:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/decisionMaking/saturetedAffectAct:o</from>
        <to>/motivation/saturetedAffectAct:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/decisionMaking/updateBoredom:o</from>
        <to>/motivation/updateBoredom:i</to>
        <protocol>shmem</protocol>
    </connection>
    
    <connection>
        <from>/decisionMaking/updateBatteryConsumption:o</from>
        <to>/batterySensor/updateBatteryConsumption:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/decisionMaking/resetBattery:o</from>
        <to>/batterySensor/resetBattery:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/decisionMaking/resetBoredomComfort:o</from>
        <to>/motivation/resetBoredomComfort:i</to>
        <protocol>shmem</protocol>
    </connection>
    
    <connection>
        <from>/action/actionTargetARE:o</from>
        <to>/actionsRenderingEngine/cmd:io</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/action/movement/torso</from>
        <to>/ctpservice/torso/rpc</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/action/movement/right_arm</from>
        <to>/ctpservice/right_arm/rpc</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/action/movement/left_arm</from>
        <to>/ctpservice/left_arm/rpc</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/action/recharge:o</from>
        <to>/batterySensor/recharge:i</to>
        <protocol></protocol>
    </connection>

    <connection>
        <from>/action/speech:o</from>
        <to>/acapelaSpeak/speech:i</to>
        <protocol>tcp</protocol>
    </connection>

    <connection>
        <from>/action/cmdFace:rpc</from>
        <to>/icub/face/raw/in</to>
        <protocol>tcp</protocol>
    </connection>  

    <!--Stop application-->
  <!--   
    <connection>
        <from>/decisionMaking/stopApplication:o</from>
        <to>/batterySensor</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/decisionMaking/stopApplication:o</from>
        <to>/perception</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/decisionMaking/stopApplication:o</from>
        <to>/motivation</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/decisionMaking/stopApplication:o</from>
        <to>/action</to>
        <protocol>shmem</protocol>
    </connection> 

    <connection>
        <from>/decisionMaking/stopApplication:o</from>
        <to>/decisionMaking</to>
        <protocol>shmem</protocol>
    </connection>
-->
    <!-- RPC port to control the eyelids -->
    <connection>
        <from>/action/movement/face</from>
        <to>/ctpservice/face/rpc</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/action/emotions/out</from>
        <to>/icub/face/emotions/in</to>
        <protocol>tcp</protocol>
    </connection>

    <connection>
        <from>/action/statusEyelids:o</from>
        <to>/perception/statusEyelids:i</to>
        <protocol>shmem</protocol>
    </connection>

    <connection>
        <from>/decisionMaking/commandSM:o</from>
        <to>/action/commandSM:i</to>
        <protocol>shmem</protocol>
    </connection>


</application>
